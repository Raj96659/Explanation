Import necessary libraries and load a dataset from a CSV file named "sales_data_sample.csv" using Pandas.

Remove some columns that are not needed in the analysis, such as 'ADDRESSLINE1', 'ADDRESSLINE2', 'STATE', 'POSTALCODE', and 'PHONE'.

Check for null values in the dataset using isnull().sum() and examine the data types of the columns using dtypes.

Convert the 'ORDERDATE' column to a datetime format using pd.to_datetime().

Create features for RFM analysis, including Recency (days since the latest order), Frequency (number of purchases), and MonetaryValue (revenue generated by customers). This is done by grouping the data by 'CUSTOMERNAME' and applying aggregation functions.

Rename the aggregated columns to 'Recency', 'Frequency', and 'MonetaryValue'.

Divide the data into segments using quartiles (four equal parts) for Recency, Frequency, and MonetaryValue, and create new columns 'R', 'F', and 'M' with labels for each segment.

Create an 'RFM_Score' column by summing the 'R', 'F', and 'M' values for each customer.

Define a function rfm_level() to categorize customers into 'High Value Customer', 'Mid Value Customer', or 'Low Value Customer' based on their RFM score, and apply it to create an 'RFM_Level' column.

Prepare the data for K-Means clustering by selecting the 'Recency', 'Frequency', and 'MonetaryValue' columns and performing log transformation.

Standardize the data using StandardScaler to have a mean of 0 and a standard deviation of 1.

Fit K-Means clustering with different numbers of clusters (K) and calculate the Sum of Squared Errors (SSE) for each K value. The code uses the Elbow method to determine the optimal number of clusters.

Visualize the SSE values for different K values to find the "elbow" point, indicating the optimal number of clusters.

Choose the optimal number of clusters, in this case, 5, and apply K-Means clustering with that number.

Assign cluster labels to the original data and add a 'Cluster' column to the dataset.
